"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CancelCB_1 = require("../cancellables/CancelCB");
const TimerCancellable_1 = require("../cancellables/TimerCancellable");
/**
 * Default Scheduler
 */
class Scheduler {
    constructor(cb) {
        this.cb = cb;
        this.currentTime = Date.now();
    }
    /**
     * Compared to Promise.resolve() asap is a little better â€”
     * 1. This mimics the exact same behavior of Promise.resolve()
     * 2. It enables efficient cancellation of jobs.
     */
    asap(fn, ...args) {
        return new CancelCB_1.CancelCB(this.cb, fn, args);
    }
    /**
     * Some sugar over the native setTimeout() functionality
     */
    delay(fn, duration, ...args) {
        const id = setTimeout(fn, duration, ...args);
        return new TimerCancellable_1.TimerCancellable(id);
    }
    now() {
        return Date.now() - this.currentTime;
    }
}
exports.Scheduler = Scheduler;
