import { ICancellable } from '../cancellables/ICancellable';
import { Ticker } from '../internals/Ticker';
import { IScheduler } from './IScheduler';
/**
 * Default Scheduler
 */
export declare class Scheduler implements IScheduler {
    private cb;
    private currentTime;
    constructor(cb: Ticker);
    /**
     * Compared to Promise.resolve() asap is a little better â€”
     * 1. This mimics the exact same behavior of Promise.resolve()
     * 2. It enables efficient cancellation of jobs.
     */
    asap<T extends unknown[]>(fn: (...t: T) => unknown, ...args: T): ICancellable;
    /**
     * Some sugar over the native setTimeout() functionality
     */
    delay<T extends unknown[]>(fn: (...t: T) => unknown, duration: number, ...args: T): ICancellable;
    now(): number;
}
